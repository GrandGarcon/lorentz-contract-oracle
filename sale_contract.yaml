
config:
  base-config: &base-config
    tezos_client_path:
      "tezos-client -A ec2-18-190-24-202.us-east-2.compute.amazonaws.com -P 20000"
    user_address:
      tz1YPSCGWXwBdTncK2aCctSZAXWvGsGwVJqU
    param_path:
      /Users/michaelklein/Coding/morley-framework/lorentz-contract-param
    stack_path:
      /Users/michaelklein/Coding/morley-framework/lorentz-contract-param/stack

  sale-config: &sale-config
    <<: *base-config
    param_path:
      /Users/michaelklein/Coding/morley-framework/lorentz-contract-sale
    stack_path:
      /Users/michaelklein/Coding/morley-framework/lorentz-contract-sale/stack

  base-config-bob:
    <<: *base-config
    user_address:
      tz1hUXU4DPHPyrEEekqhmEEJvdCpB2gP4qtp

  sale-config-bob:
    <<: *sale-config
    user_address:
      tz1hUXU4DPHPyrEEekqhmEEJvdCpB2gP4qtp

do:
  - user:
      name:
        Sandy
      address:
        tz1YPSCGWXwBdTncK2aCctSZAXWvGsGwVJqU

  - user:
      name:
        SandyBob
      address:
        tz1hUXU4DPHPyrEEekqhmEEJvdCpB2gP4qtp

  - originate:
      alias: Token1
      config: $base-config
      command: "lorentz-contract print --name ManagedLedger"
      storage_command: "lorentz-contract-storage ManagedLedgerBabylon"
      initial_storage:
        admin: $Sandy
      burn_cap: 4.675

  - originate:
      alias: Token2
      config: $base-config
      command: "lorentz-contract print --name ManagedLedger"
      storage_command: "lorentz-contract-storage ManagedLedgerBabylon"
      initial_storage:
        admin: $Sandy
      burn_cap: 4.675

  - originate:
      alias: Sale1
      config: $sale-config
      command: "lorentz-contracts-sale print"
      storage_command: "lorentz-contracts-sale init"
      initial_storage:
        admin: $Sandy
        held: $Token1
        wallet: $Sandy
        wanted: $Token2
        held-price: "1"
        wanted-price: "1"
      burn_cap: "1.749"

  - run:
      alias: MintSandy1
      config: $base-config
      contract: $Token1
      command: "lorentz-contract-param ManagedLedgerBabylon-mint"
      parameters:
        to: $Sandy
        value: "10"
      burn_cap: "0.074"

  - run:
      alias: AllowanceSandySale1
      config: $base-config
      contract: $Token1
      command: "lorentz-contract-param ManagedLedgerBabylon-approve"
      parameters:
        spender: $Sale1
        value: "10"
      burn_cap:  "0.031"

  - run:
      alias: MintSandyBob1
      config: $base-config
      contract: $Token2
      command: "lorentz-contract-param ManagedLedgerBabylon-mint"
      parameters:
        to: $SandyBob
        value: "10"
      burn_cap:  "0.074"

  - run:
      alias: AllowanceSandyBobSale1
      config: $base-config-bob
      contract: $Token2
      command: "lorentz-contract-param ManagedLedgerBabylon-approve"
      parameters:
        spender: $Sale1
        value: "10"
      burn_cap:  "0.031"

  - run:
      alias: PurchaseSale1
      config: $sale-config-bob
      contract: $Sale1
      command: "lorentz-contracts-sale purchase"
      parameters:
        held-price: "1"
        wanted-price: "1"
      burn_cap:  "0.148"

  - originate:
      alias: SandyPostSaleBalance
      config: $base-config
      command: "lorentz-contract print --name NatStorageContract"
      storage_command: "ruby -e 'puts ARGV[1]' -- "
      initial_storage:
        initial: "0"
      burn_cap:  "0.295"

  - originate:
      alias: SandyBobPostSaleBalance
      config: $base-config
      command: "lorentz-contract print --name NatStorageContract"
      storage_command: "ruby -e 'puts ARGV[1]' -- "
      initial_storage:
        initial: "0"
      burn_cap:  "0.295"

  - originate:
      alias: SandyPostSaleBalanceLeft
      config: $base-config
      command: "lorentz-contract print --name NatStorageContract"
      storage_command: "ruby -e 'puts ARGV[1]' -- "
      initial_storage:
        initial: "0"
      burn_cap:  "0.295"

  - originate:
      alias: SandyBobPostSaleBalanceLeft
      config: $base-config
      command: "lorentz-contract print --name NatStorageContract"
      storage_command: "ruby -e 'puts ARGV[1]' -- "
      initial_storage:
        initial: "0"
      burn_cap:  "0.295"

  - run:
      alias: SandyPostSaleGetBalance
      config: $base-config
      contract: $Token2
      command: "lorentz-contract-param ManagedLedgerBabylon-getBalance"
      parameters:
        account: $Sandy
        callback-contract: $SandyPostSaleBalance
      burn_cap:  "0.000001"

  - run:
      alias: SandyBobPostSaleGetBalance
      config: $base-config
      contract: $Token1
      command: "lorentz-contract-param ManagedLedgerBabylon-getBalance"
      parameters:
        account: $SandyBob
        callback-contract: $SandyBobPostSaleBalance
      burn_cap:  "0.000001"

  - run:
      alias: SandyPostSaleGetBalanceLeft
      config: $base-config
      contract: $Token1
      command: "lorentz-contract-param ManagedLedgerBabylon-getBalance"
      parameters:
        account: $Sandy
        callback-contract: $SandyPostSaleBalanceLeft
      burn_cap:  "0.000001"

  - run:
      alias: SandyBobPostSaleGetBalanceLeft
      config: $base-config
      contract: $Token2
      command: "lorentz-contract-param ManagedLedgerBabylon-getBalance"
      parameters:
        account: $SandyBob
        callback-contract: $SandyBobPostSaleBalanceLeft
      burn_cap:  "0.000001"

