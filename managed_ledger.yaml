
config:
  base-config: &base-config
    tezos_client_path:
      "tezos-client -A rpcalpha.tzbeta.net -P 443 -S"
    user_address:
      tz1R3vJ5TV8Y5pVj8dicBR23Zv8JArusDkYr
    param_path:
      /Users/michaelklein/Coding/morley-framework/lorentz-contract-param
    stack_path:
      /Users/michaelklein/Coding/morley-framework/lorentz-contract-param/stack

  sale-config: &sale-config
    <<: *base-config
    param_path:
      /Users/michaelklein/Coding/morley-framework/lorentz-contract-sale
    stack_path:
      /Users/michaelklein/Coding/morley-framework/lorentz-contract-sale/stack

  base-config-bob:
    <<: *base-config
    user_address:
      tz1bDCu64RmcpWahdn9bWrDMi6cu7mXZynHm

  sale-config-bob:
    <<: *sale-config
    user_address:
      tz1bDCu64RmcpWahdn9bWrDMi6cu7mXZynHm

do:
  - user:
      name:
        Alice
      address:
        tz1R3vJ5TV8Y5pVj8dicBR23Zv8JArusDkYr

  - user:
      name:
        Bob
      address:
        tz1bDCu64RmcpWahdn9bWrDMi6cu7mXZynHm

  - originate:
      alias: Token1
      config: $base-config
      command: "lorentz-contract print --name ManagedLedger"
      storage_command: "lorentz-contract-storage ManagedLedgerBabylon"
      initial_storage:
        admin: $Alice
      burn_cap: 4.675

  - originate:
      alias: Token2
      config: $base-config
      command: "lorentz-contract print --name ManagedLedger"
      storage_command: "lorentz-contract-storage ManagedLedgerBabylon"
      initial_storage:
        admin: $Alice
      burn_cap: 4.675

  - originate:
      alias: Sale1
      config: $sale-config
      command: "lorentz-contracts-sale print"
      storage_command: "lorentz-contracts-sale init"
      initial_storage:
        admin: $Alice
        held: $Token1
        wallet: $Alice
        wanted: $Token2
        held-price: "1"
        wanted-price: "1"
      burn_cap: 4.587

  - originate:
      alias: SaleTunnel1
      config: $sale-config
      command: "lorentz-contracts-sale print-tunnel"
      storage_command: "lorentz-contracts-sale init-allowance"
      initial_storage:
        held: $Token1
        wanted: $Token2
        sale: $Sale1
      burn_cap: 0.814

  - run:
      alias: SaleSetTunnel1
      config: $sale-config
      contract: $Sale1
      command: "lorentz-contracts-sale set-tunnel"
      parameters:
        tunnel: $SaleTunnel1
      burn_cap: 0.027

  - run:
      alias: MintAlice1
      config: $base-config
      contract: $Token1
      command: "lorentz-contract-param ManagedLedgerBabylon-mint"
      parameters:
        to: $Alice
        value: "10"
      burn_cap: "0.074"

  - run:
      alias: AllowanceAliceSale1
      config: $base-config
      contract: $Token1
      command: "lorentz-contract-param ManagedLedgerBabylon-approve"
      parameters:
        spender: $Sale1
        value: "10"
      burn_cap:  "0.031"

  - run:
      alias: MintBob1
      config: $base-config
      contract: $Token2
      command: "lorentz-contract-param ManagedLedgerBabylon-mint"
      parameters:
        to: $Bob
        value: "10"
      burn_cap:  "0.074"

  - run:
      alias: AllowanceBobSale1
      config: $base-config-bob
      contract: $Token2
      command: "lorentz-contract-param ManagedLedgerBabylon-approve"
      parameters:
        spender: $Sale1
        value: "10"
      burn_cap:  "0.031"

  - run:
      alias: PurchaseSale1
      config: $sale-config-bob
      contract: $Sale1
      command: "lorentz-contracts-sale purchase"
      parameters:
        held-price: "1"
        wanted-price: "1"
      burn_cap:  "100"

  - originate:
      alias: AlicePostSaleBalance
      config: $base-config
      command: "lorentz-contract print --name NatStorage"
      storage_command: "lorentz-contract-storage NatStorage"
      initial_storage:
        initial: "0"
      burn_cap:  "0.000001"

  - originate:
      alias: BobPostSaleBalance
      config: $base-config
      command: "lorentz-contract print --name NatStorage"
      storage_command: "lorentz-contract-storage NatStorage"
      initial_storage:
        initial: "0"
      burn_cap:  "0.000001"

  - run:
      alias: AlicePostSaleGetBalance
      config: $base-config
      command: "lorentz-contract-param ManagedLedgerBabylon-getBalance print --name NatStorage"
      parameters:
        account: $Alice
        callback-contract: $AlicePostSaleBalance
      burn_cap:  "0.000001"

  - run:
      alias: BobPostSaleGetBalance
      config: $base-config
      command: "lorentz-contract-param ManagedLedgerBabylon-getBalance print --name NatStorage"
      parameters:
        account: $Bob
        callback-contract: $AlicePostSaleBalance
      burn_cap:  "0.000001"

